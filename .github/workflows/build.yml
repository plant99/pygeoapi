name: Linux GitHub CI
on: [pull_request,push,workflow_dispatch]
env:
  PYGEOAPI_CONFIG: "$(pwd)/pygeoapi-config.yml"
  CPLUS_INCLUDE_PATH: /usr/include/gdal
  C_INCLUDE_PATH: /usr/include/gdal
  DEBIAN_FRONTEND: noninteractive

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7]

    steps:
    - name: Pre install steps
      run: |
        sudo add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable && sudo apt-get update
        echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list && sudo apt-get update
        sudo apt-get install gdal-bin
        sudo apt-get install libgdal-dev
        sudo apt-get install libsqlite3-mod-spatialite
        sudo apt-get install python-pyspatialite
        sudo apt-get install mongodb-org
        sudo service postgresql stop
        sudo apt-get remove -yq 'postgresql-*'
        sudo apt autoremove
        sudo rm /etc/apt/sources.list.d/pgdg.list*
        sudo apt-get -qq update
        sudo apt-get install -qq build-essential tzdata python3-dev python3-setuptools python-all python3-all python-setuptools python3-pip
        sudo apt-get install -y devscripts fakeroot debhelper
        sudo apt-get install -y postgresql-10-postgis-3
        curl -s -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.5.1-amd64.deb
        sudo dpkg -i --force-confnew elasticsearch-7.5.1-amd64.deb
        sudo sed -i.old 's/-Xms1g/-Xms128m/' /etc/elasticsearch/jvm.options
        sudo sed -i.old 's/-Xmx1g/-Xmx128m/' /etc/elasticsearch/jvm.options
        echo -e '-XX:+DisableExplicitGC\n-Djdk.io.permissionsUseCanonicalPath=true\n-Dlog4j.skipJansi=true\n-server\n' | sudo tee -a /etc/elasticsearch/jvm.options
        sudo chown -R elasticsearch:elasticsearch /etc/default/elasticsearch
        sudo systemctl start elasticsearch
        sudo systemctl enable mongod
        sudo systemctl start mongod
        sudo systemctl status mongod
        sudo systemctl enable postgresql
        sudo systemctl start postgresql
        sudo systemctl status postgresql
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip3 install GDAL==`gdalinfo --version | cut -d' ' -f2 | cut -d',' -f1`
        pip3 install -r requirements.txt
        pip3 install -r requirements-dev.txt
        pip3 install -r requirements-manager.txt
        pip3 install -r requirements-provider.txt
        python3 setup.py install
    - name: Setup project
      run: |
        sleep 20
        python3 tests/load_es_data.py tests/data/ne_110m_populated_places_simple.geojson geonameid
        python3 tests/load_mongo_data.py tests/data/ne_110m_populated_places_simple.geojson
        pygeoapi generate-openapi-document -c pygeoapi-config.yml > pygeoapi-openapi.yml
        psql -U postgres -c 'create database test'
        psql -U postgres -d test -c 'create extension postgis'
        gunzip < tests/data/hotosm_bdi_waterways.sql.gz | psql -U postgres test
        python3 tests/load_es_data.py tests/cite/ogcapi-features/canada-hydat-daily-mean-02HC003.geojson IDENTIFIER
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Test with pytest
    #   run: |
    #     pytest
